


Gadgets
=======


0x000000000040115e: adc dword ptr [rax], edi; test rax, rax; je 0x1170; mov edi, 0x404060; jmp rax; 
0x00000000004010ec: adc eax, 0x2ee7; hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x000000000040111c: adc edi, dword ptr [rax]; test rax, rax; je 0x1130; mov edi, 0x404060; jmp rax; 
0x000000000040118c: adc edx, dword ptr [rbp + 0x48]; mov ebp, esp; call 0x1110; mov byte ptr [rip + 0x2eeb], 1; pop rbp; ret; 
0x00000000004010f0: add ah, dh; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x00000000004014b5: add al, byte ptr [rax]; add byte ptr [rax - 0x75], cl; ror byte ptr [r8 - 0x3f], 0xe8; add cl, byte ptr [rax - 0x77]; ret 0x8948; 
0x0000000000401b67: add al, ch; add eax, dword ptr [rax]; add byte ptr [rax], al; nop; pop rbp; ret; 
0x00000000004010ea: add bh, bh; adc eax, 0x2ee7; hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000401714: add byte ptr [rax + 0x39], cl; ret 0x1873; 
0x00000000004016b2: add byte ptr [rax + 0x39], cl; ret 0x1f73; 
0x00000000004014b7: add byte ptr [rax - 0x75], cl; ror byte ptr [r8 - 0x3f], 0xe8; add cl, byte ptr [rax - 0x77]; ret 0x8948; 
0x000000000040100a: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000040123d: add byte ptr [rax], al; add byte ptr [rax], al; call 0x1030; nop; leave; ret; 
0x0000000000401267: add byte ptr [rax], al; add byte ptr [rax], al; call 0x1060; nop; pop rbp; ret; 
0x00000000004010f8: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; ret; 
0x000000000040111e: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x1130; mov edi, 0x404060; jmp rax; 
0x0000000000401160: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x1170; mov edi, 0x404060; jmp rax; 
0x0000000000401c19: add byte ptr [rax], al; add byte ptr [rax], al; leave; ret; 
0x0000000000401263: add byte ptr [rax], al; add byte ptr [rax], bh; call 0x1060; nop; pop rbp; ret; 
0x0000000000401c1a: add byte ptr [rax], al; add cl, cl; ret; 
0x000000000040123f: add byte ptr [rax], al; call 0x1030; nop; leave; ret; 
0x0000000000401269: add byte ptr [rax], al; call 0x1060; nop; pop rbp; ret; 
0x0000000000401b66: add byte ptr [rax], al; call 0x1b70; nop; pop rbp; ret; 
0x0000000000401264: add byte ptr [rax], al; mov eax, 0; call 0x1060; nop; pop rbp; ret; 
0x000000000040120a: add byte ptr [rax], al; mov rdi, rax; call 0x10b0; nop; pop rbp; ret; 
0x00000000004010fa: add byte ptr [rax], al; nop dword ptr [rax]; ret; 
0x0000000000401009: add byte ptr [rax], al; test rax, rax; je 0x1012; call rax; 
0x0000000000401009: add byte ptr [rax], al; test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x0000000000401120: add byte ptr [rax], al; test rax, rax; je 0x1130; mov edi, 0x404060; jmp rax; 
0x0000000000401162: add byte ptr [rax], al; test rax, rax; je 0x1170; mov edi, 0x404060; jmp rax; 
0x00000000004010ef: add byte ptr [rax], al; hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000401c1b: add byte ptr [rax], al; leave; ret; 
0x0000000000401b6b: add byte ptr [rax], al; nop; pop rbp; ret; 
0x0000000000401265: add byte ptr [rax], bh; call 0x1060; nop; pop rbp; ret; 
0x000000000040119b: add byte ptr [rcx], al; pop rbp; ret; 
0x00000000004010ee: add byte ptr cs:[rax], al; hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x00000000004014bf: add cl, byte ptr [rax - 0x77]; ret 0x8948; 
0x0000000000401c1c: add cl, cl; ret; 
0x00000000004010e9: add dil, dil; adc eax, 0x2ee7; hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000401006: add eax, 0x2fd5; test rax, rax; je 0x1012; call rax; 
0x0000000000401006: add eax, 0x2fd5; test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x0000000000401b69: add eax, dword ptr [rax]; add byte ptr [rax], al; nop; pop rbp; ret; 
0x0000000000401013: add esp, 8; ret; 
0x0000000000401012: add rsp, 8; ret; 
0x0000000000401241: call 0x1030; nop; leave; ret; 
0x0000000000401237: call 0x1050; mov edi, 0; call 0x1030; nop; leave; ret; 
0x000000000040126b: call 0x1060; nop; pop rbp; ret; 
0x000000000040120f: call 0x10b0; nop; pop rbp; ret; 
0x0000000000401690: call 0x10cf756; ret 0x458b; 
0x0000000000401191: call 0x1110; mov byte ptr [rip + 0x2eeb], 1; pop rbp; ret; 
0x0000000000401c13: call 0x1b04; mov eax, 0; leave; ret; 
0x0000000000401b68: call 0x1b70; nop; pop rbp; ret; 
0x00000000004010eb: call qword ptr [rip + 0x2ee7]; hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000401010: call rax; 
0x0000000000401010: call rax; add rsp, 8; ret; 
0x0000000000401472: cmp dword ptr [rbp - 0xc], eax; jl 0x1420; nop; nop; pop rbp; ret; 
0x0000000000401738: cmp eax, dword ptr [rbp - 0x40]; jb 0x155a; mov rax, qword ptr [rbp - 0x10]; leave; ret; 
0x0000000000401737: cmp rax, qword ptr [rbp - 0x40]; jb 0x155a; mov rax, qword ptr [rbp - 0x10]; leave; ret; 
0x0000000000401ace: dec dword ptr [rax + 0x39]; ret; 
0x0000000000401af8: fmul dword ptr [r8 - 0x75]; fmul dword ptr [r8 - 0x75]; pop rbp; clc; leave; ret; 
0x0000000000401afc: fmul dword ptr [r8 - 0x75]; pop rbp; clc; leave; ret; 
0x0000000000401af9: fmul dword ptr [rax - 0x75]; fmul dword ptr [r8 - 0x75]; pop rbp; clc; leave; ret; 
0x0000000000401afd: fmul dword ptr [rax - 0x75]; pop rbp; clc; leave; ret; 
0x0000000000401002: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x2fd5; test rax, rax; je 0x1012; call rax; 
0x000000000040173b: jb 0x155a; mov rax, qword ptr [rbp - 0x10]; leave; ret; 
0x000000000040100e: je 0x1012; call rax; 
0x000000000040100e: je 0x1012; call rax; add rsp, 8; ret; 
0x000000000040111b: je 0x1130; mov eax, 0; test rax, rax; je 0x1130; mov edi, 0x404060; jmp rax; 
0x0000000000401125: je 0x1130; mov edi, 0x404060; jmp rax; 
0x000000000040115d: je 0x1170; mov eax, 0; test rax, rax; je 0x1170; mov edi, 0x404060; jmp rax; 
0x0000000000401167: je 0x1170; mov edi, 0x404060; jmp rax; 
0x0000000000401475: jl 0x1420; nop; nop; pop rbp; ret; 
0x000000000040112c: jmp rax; 
0x0000000000401c0d: lea eax, [rbp - 0x70]; mov rdi, rax; call 0x1b04; mov eax, 0; leave; ret; 
0x0000000000401c0c: lea rax, [rbp - 0x70]; mov rdi, rax; call 0x1b04; mov eax, 0; leave; ret; 
0x0000000000401196: mov byte ptr [rip + 0x2eeb], 1; pop rbp; ret; 
0x0000000000401af7: mov dword ptr [rbp - 0x28], eax; mov rax, qword ptr [rbp - 0x28]; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000401266: mov eax, 0; call 0x1060; nop; pop rbp; ret; 
0x000000000040111d: mov eax, 0; test rax, rax; je 0x1130; mov edi, 0x404060; jmp rax; 
0x000000000040115f: mov eax, 0; test rax, rax; je 0x1170; mov edi, 0x404060; jmp rax; 
0x0000000000401c18: mov eax, 0; leave; ret; 
0x0000000000401742: mov eax, dword ptr [rbp - 0x10]; leave; ret; 
0x0000000000401afb: mov eax, dword ptr [rbp - 0x28]; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000401005: mov eax, dword ptr [rip + 0x2fd5]; test rax, rax; je 0x1012; call rax; 
0x0000000000401005: mov eax, dword ptr [rip + 0x2fd5]; test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x000000000040118f: mov ebp, esp; call 0x1110; mov byte ptr [rip + 0x2eeb], 1; pop rbp; ret; 
0x000000000040147d: mov ebp, esp; syscall; 
0x000000000040147d: mov ebp, esp; syscall; pop rax; ret; 
0x0000000000401aff: mov ebx, dword ptr [rbp - 8]; leave; ret; 
0x000000000040123c: mov edi, 0; call 0x1030; nop; leave; ret; 
0x0000000000401127: mov edi, 0x404060; jmp rax; 
0x000000000040120d: mov edi, eax; call 0x10b0; nop; pop rbp; ret; 
0x0000000000401c11: mov edi, eax; call 0x1b04; mov eax, 0; leave; ret; 
0x0000000000401af6: mov qword ptr [rbp - 0x28], rax; mov rax, qword ptr [rbp - 0x28]; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000401741: mov rax, qword ptr [rbp - 0x10]; leave; ret; 
0x0000000000401afa: mov rax, qword ptr [rbp - 0x28]; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000401004: mov rax, qword ptr [rip + 0x2fd5]; test rax, rax; je 0x1012; call rax; 
0x0000000000401004: mov rax, qword ptr [rip + 0x2fd5]; test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x000000000040118e: mov rbp, rsp; call 0x1110; mov byte ptr [rip + 0x2eeb], 1; pop rbp; ret; 
0x000000000040147c: mov rbp, rsp; syscall; 
0x000000000040147c: mov rbp, rsp; syscall; pop rax; ret; 
0x0000000000401afe: mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x000000000040120c: mov rdi, rax; call 0x10b0; nop; pop rbp; ret; 
0x0000000000401c10: mov rdi, rax; call 0x1b04; mov eax, 0; leave; ret; 
0x00000000004010f4: nop dword ptr [rax + rax]; nop dword ptr [rax]; ret; 
0x00000000004010fc: nop dword ptr [rax]; ret; 
0x00000000004010f3: nop dword ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x00000000004010f2: nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000401693: or al, 1; ret 0x458b; 
0x0000000000401003: or byte ptr [rax - 0x75], cl; add eax, 0x2fd5; test rax, rax; je 0x1012; call rax; 
0x000000000040134c: or byte ptr [rcx], al; ret 0x458b; 
0x0000000000401126: or dword ptr [rdi + 0x404060], edi; jmp rax; 
0x00000000004010ed: out 0x2e, eax; add byte ptr [rax], al; hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000401488: pop r10; ret; 
0x0000000000401a58: pop r12; pop r13; pop r14; pop r15; pop rbp; ret; 
0x0000000000401a5a: pop r13; pop r14; pop r15; pop rbp; ret; 
0x0000000000401a5c: pop r14; pop r15; pop rbp; ret; 
0x0000000000401a5e: pop r15; pop rbp; ret; 
0x0000000000401481: pop rax; ret; 
0x0000000000401a5b: pop rbp; pop r14; pop r15; pop rbp; ret; 
0x0000000000401b00: pop rbp; clc; leave; ret; 
0x000000000040119d: pop rbp; ret; 
0x0000000000401a5f: pop rdi; pop rbp; ret; 
0x0000000000401483: pop rdi; ret; 
0x0000000000401487: pop rdx; pop r10; ret; 
0x0000000000401489: pop rdx; ret; 
0x0000000000401a5d: pop rsi; pop r15; pop rbp; ret; 
0x0000000000401485: pop rsi; ret; 
0x0000000000401a59: pop rsp; pop r13; pop r14; pop r15; pop rbp; ret; 
0x000000000040118d: push rbp; mov rbp, rsp; call 0x1110; mov byte ptr [rip + 0x2eeb], 1; pop rbp; ret; 
0x000000000040147b: push rbp; mov rbp, rsp; syscall; 
0x000000000040147b: push rbp; mov rbp, rsp; syscall; pop rax; ret; 
0x0000000000401874: ret 0x10ba; 
0x0000000000401717: ret 0x1873; 
0x00000000004016b5: ret 0x1f73; 
0x0000000000401042: ret 0x2f; 
0x0000000000401346: ret 0x458b; 
0x000000000040142b: ret 0x8348; 
0x00000000004014c2: ret 0x8948; 
0x00000000004014cb: ret 0x8b48; 
0x0000000000401361: ret 0x8d48; 
0x00000000004014ba: ror byte ptr [r8 - 0x3f], 0xe8; add cl, byte ptr [rax - 0x77]; ret 0x8948; 
0x00000000004014bb: ror byte ptr [rax - 0x3f], 0xe8; add cl, byte ptr [rax - 0x77]; ret 0x8948; 
0x000000000040100d: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000004010e8: sbb eax, dword ptr [rax]; call qword ptr [rip + 0x2ee7]; hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000401873: scasd eax, dword ptr [rdi]; ret 0x10ba; 
0x00000000004018c3: scasd eax, dword ptr [rdi]; ret; 
0x0000000000401c21: sub esp, 8; add rsp, 8; ret; 
0x0000000000401001: sub esp, 8; mov rax, qword ptr [rip + 0x2fd5]; test rax, rax; je 0x1012; call rax; 
0x0000000000401c20: sub rsp, 8; add rsp, 8; ret; 
0x0000000000401000: sub rsp, 8; mov rax, qword ptr [rip + 0x2fd5]; test rax, rax; je 0x1012; call rax; 
0x00000000004010f6: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; ret; 
0x0000000000401476: test eax, 0xc35d9090; push rbp; mov rbp, rsp; syscall; 
0x000000000040100c: test eax, eax; je 0x1012; call rax; 
0x000000000040100c: test eax, eax; je 0x1012; call rax; add rsp, 8; ret; 
0x0000000000401123: test eax, eax; je 0x1130; mov edi, 0x404060; jmp rax; 
0x0000000000401165: test eax, eax; je 0x1170; mov edi, 0x404060; jmp rax; 
0x000000000040100b: test rax, rax; je 0x1012; call rax; 
0x000000000040100b: test rax, rax; je 0x1012; call rax; add rsp, 8; ret; 
0x0000000000401122: test rax, rax; je 0x1130; mov edi, 0x404060; jmp rax; 
0x0000000000401164: test rax, rax; je 0x1170; mov edi, 0x404060; jmp rax; 
0x0000000000401c0e: xchg r8d, eax; mov rdi, rax; call 0x1b04; mov eax, 0; leave; ret; 
0x0000000000401735: cdqe; cmp rax, qword ptr [rbp - 0x40]; jb 0x155a; mov rax, qword ptr [rbp - 0x10]; leave; ret; 
0x0000000000401b01: clc; leave; ret; 
0x0000000000401736: cwde; cmp rax, qword ptr [rbp - 0x40]; jb 0x155a; mov rax, qword ptr [rbp - 0x10]; leave; ret; 
0x0000000000401474: hlt; jl 0x1420; nop; nop; pop rbp; ret; 
0x00000000004010f1: hlt; nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000401247: leave; ret; 
0x0000000000401b58: nop; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000401c0f: nop; mov rdi, rax; call 0x1b04; mov eax, 0; leave; ret; 
0x0000000000401214: nop; pop rbp; ret; 
0x0000000000401246: nop; leave; ret; 
0x0000000000401b57: nop; nop; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000401477: nop; nop; pop rbp; ret; 
0x000000000040112f: nop; ret; 
0x0000000000401016: ret; 
0x000000000040147f: syscall; 
0x000000000040147f: syscall; pop rax; ret; 

178 gadgets found
